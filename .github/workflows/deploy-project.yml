name: Deploy project

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    # se pueden crear servicios en local (crea contendores de docker)
    # services:
    #   redis:
    #     image: redis
    #     ports:
    #       - 6379:6379

    steps:
      # - name: Install redis
      #   run: sudo apt-get update -y && sudo apt-get install redis-tools -y

      # - name: Test redis
      #   run: redis-cli -h localhost -p 6379 ping

      - name: Print Variable
        run: echo "${{ secrets.SECRET_VAR}}"

      - name: Checkout
        uses: actions/checkout@v4

      - name: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: cd project-test-GITHUBACT && npm install

      - name: Run test
        run: cd project-test-GITHUBACT && npm run test

      - name: Build page
        run: cd project-test-GITHUBACT && npm run build

      - name: Upload artifact for pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: project-test-GITHUBACT/public/

  deploy:
    # en caso de fallo de jobs anteriores se puede forzar usando informacion del context o funciones como success, failure o always
    # if: {{ always() }}
    runs-on: ubuntu-latest
    needs: build

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deploy-pages.outputs.page-url }}

    steps:
      - name: deploy
        # run: echo "Deploying..."
        id: deploy-pages
        uses: actions/deploy-pages@v4


